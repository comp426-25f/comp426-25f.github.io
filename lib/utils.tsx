import { clsx, type ClassValue } from 'clsx';
import Link from 'next/link';
import React from 'react';
import { twMerge } from 'tailwind-merge';

// Auto-generated by Shadcn UI
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export type CommaSeparatedListItem = {
  text: string;
  href?: string;
  className?: string;
};

export const createCommaSeparatedListText = (
  items: CommaSeparatedListItem[]
): React.ReactNode => {
  const createElement = (item: CommaSeparatedListItem) => {
    return (
      <span className={item.className}>
        {item.href ? (
          <Link href={item.href} target="_blank" className="hover:underline">
            {item.text}
          </Link>
        ) : (
          item.text
        )}
      </span>
    );
  };
  if (items.length === 0) return <></>;
  if (items.length === 1) return <>{createElement(items[0])}</>;

  const lastItem = items.pop()!;

  return (
    <>
      {items.map((item) => (
        <React.Fragment key={item.text}>
          {createElement(item)}
          {items.length > 1 && ', '}
        </React.Fragment>
      ))}
      {` and `}
      {createElement(lastItem)}
    </>
  );
};
